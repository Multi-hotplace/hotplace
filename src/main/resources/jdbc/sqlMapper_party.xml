<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="project.com.hotplace.party">
	<select id="par_selectAll" resultType="int">
		select * from party p join member m on (p.writer_num = m.num)
		where 
		<if test="searchKey == 'title'">
			p.title like #{searchWord}
		</if>
		<if test="searchKey == 'place'">
			p.place like #{searchWord}
		</if>
		 order by p.party_num desc
	</select>
	
	<select id="par_selectAll_recruiting" resultType="int">
		select * from party p join member m on (p.writer_num = m.num)
		where 
		<if test="searchKey == 'title'">
			p.title like #{searchWord}
		</if>
		<if test="searchKey == 'place'">
			p.place like #{searchWord}
		</if> and p.applicants <![CDATA[<]]> p.max and p.dead_line <![CDATA[>]]> sysdate
		 order by p.party_num desc
	</select>
	
	<select id="par_selectAll_completion" resultType="int">
		select * from party p join member m on (p.writer_num = m.num)
		where 
		<if test="searchKey == 'title'">
			p.title like #{searchWord}
		</if>
		<if test="searchKey == 'place'">
			p.place like #{searchWord}
		</if> and (p.applicants = p.max or p.dead_line <![CDATA[<]]> sysdate)
		 order by p.party_num desc
	</select>
	
	<select id="par_searchList" resultType="project.com.hotplace.party.model.PartyVO">
		select *
			from (select rownum rn, v_par.*
    		from (select p.party_num as partyNum, m.nick_name as writerName, p.title, p.views, p.content, p.applicants, p.max, p.place, p.time_limit as timeLimit, p.wdate, p.dead_line as deadLine, p.writer_num as writerNum
        		from party p join member m on (p.writer_num = m.num)
        		where 
					<if test="searchKey == 'title'">
						p.title like #{searchWord}
					</if>
					<if test="searchKey == 'place'">
						p.place like #{searchWord}
					</if>
        		order by p.party_num desc) v_par)
		where rn between #{st} and #{en}
	</select>
	
	<select id="par_searchList_recruiting" resultType="project.com.hotplace.party.model.PartyVO">
		select *
			from (select rownum rn, v_par.*
    		from (select p.party_num as partyNum, m.nick_name as writerName, p.title, p.views, p.content, p.applicants, p.max, p.place, p.time_limit as timeLimit, p.wdate, p.dead_line as deadLine, p.writer_num as writerNum
        		from party p join member m on (p.writer_num = m.num)
        		where 
					<if test="searchKey == 'title'">
						p.title like #{searchWord}
					</if>
					<if test="searchKey == 'place'">
						p.place like #{searchWord}
					</if> and p.applicants <![CDATA[<]]> p.max and p.dead_line <![CDATA[>]]> sysdate
        		order by p.party_num desc) v_par)
		where rn between #{st} and #{en}
	</select>
	
	<select id="par_searchList_completion" resultType="project.com.hotplace.party.model.PartyVO">
		select *
			from (select rownum rn, v_par.*
    		from (select p.party_num as partyNum, m.nick_name as writerName, p.title, p.views, p.content, p.applicants, p.max, p.place, p.time_limit as timeLimit, p.wdate, p.dead_line as deadLine, p.writer_num as writerNum
        		from party p join member m on (p.writer_num = m.num)
        		where 
					<if test="searchKey == 'title'">
						p.title like #{searchWord}
					</if>
					<if test="searchKey == 'place'">
						p.place like #{searchWord}
					</if> and (p.applicants = p.max or p.dead_line <![CDATA[<]]> sysdate)
        		order by p.party_num desc) v_par)
		where rn between #{st} and #{en}
	</select>
	
	<select id="par_selectOne" resultType="project.com.hotplace.party.model.PartyVO">
		select p.party_num as partyNum, m.nick_name as writerName, p.title, p.views, p.content, p.applicants, p.max, p.place, p.time_limit as timeLimit, p.wdate, p.dead_line as deadLine, p.writer_num as writerNum
		from party p join member m on (p.writer_num = m.num)
		where p.party_num = #{partyNum}
	</select>
	
	<update id="par_views" parameterType="project.com.hotplace.party.model.PartyVO">
		update party set views = views +1
		where party_num = #{partyNum}
	</update>
	
	<insert id="par_insert" parameterType="project.com.hotplace.party.model.PartyVO">
		insert into party(party_num, title, max, time_limit, place, content, writer_num, dead_line) 
		values(par_sequence.nextval, #{title}, #{max}, TO_DATE(#{timeLimit},'YYYY-MM-DD HH24:MI:SS'), #{place}, #{content}, #{writerNum}, TO_DATE(#{deadLine},'YYYY-MM-DD HH24:MI:SS'))
	</insert>
	
	<update id="par_update" parameterType="project.com.hotplace.party.model.PartyVO">
		update party set title=#{title}, max=#{max}, time_limit = TO_DATE(#{timeLimit},'YYYY-MM-DD HH24:MI:SS'), place=#{place}, content=#{content}, dead_line = TO_DATE(#{deadLine},'YYYY-MM-DD HH24:MI:SS')
		where party_num = #{partyNum}
	</update>

	<update id="par_approveOK" parameterType="project.com.hotplace.party.model.PartyVO">
		update party set applicants = applicants + 1
		where party_num = #{partyNum}
	</update>
	
	<delete id="par_delete">
		delete from party where party_num = #{partyNum}
	</delete> 
	
	<select id="par_myParty" resultType="project.com.hotplace.party.model.PartyVO" parameterType="HashMap">
		select *
			from (select rownum rn, v_par.*
    		from (select p.party_num as partyNum, m.nick_name as writerName, p.title, p.views, p.content, p.applicants, p.max, p.place, 
    			p.time_limit as timeLimit, p.wdate, p.dead_line as deadLine, p.writer_num as writerNum
        		from party p join member m on (p.writer_num = m.num)
        		where p.writer_num=#{writerNum}
        		order by p.party_num desc) v_par)
		where rn between #{st} and #{en}
	</select>

	<select id="par_myAppilcants" resultType="project.com.hotplace.party.model.PartyVO" parameterType="HashMap">
		select *
			from (select rownum rn, v_par.*
    		from (select p.party_num as partyNum, m.nick_name as writerName, p.title, p.views, p.content, p.applicants, p.max, p.place, 
    			p.time_limit as timeLimit, p.wdate, p.dead_line as deadLine, p.writer_num as writerNum, a.status, a.user_num as userNum
        		from party p join member m on (p.writer_num = m.num) join applicants a on (p.party_num = a.party_num)
        		where a.user_num=#{userNum}
        		order by p.party_num desc) v_par)
		where rn between #{st} and #{en}
	</select>

	<select id="myPartyCount" resultType="int">
		select count(*) from party p join applicants a on (p.party_num = a.party_num)
		where a.user_num=#{userNum}
	</select>

	<select id="totalCount" resultType="int">
		select count(*) from party
		where writer_num=#{writerNum}
	</select>
	
	<select id="partyCount" resultType="int">
		select count(*) from party 
		where place like #{searchWord}
		and applicants <![CDATA[<]]> max and dead_line <![CDATA[>]]> sysdate
		 order by party_num desc
	</select>
</mapper>